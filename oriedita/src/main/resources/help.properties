drawDiagonalGridlinesAction=<html>\
  Draw the diagonal lines of each grid cell<br>\
  Useful for hex-pleated models
drawTwoColoredCpAction=<html>\
  Make 2-Colored crease pattern with<br>\
  the selected crease line (Select<br>\
  crease lines in advance using select<br>\
  button).
a__hajimeni=<html>\
  <h1>Help</h1>\
  In this box help text will appear when you click on a button.\
  Right click this box to dismiss.
foldedFigureToggleAntiAliasAction=<html>\
  Anti-alias processing of<br>\
  calculated shape
all_s_step_to_orisenAction=<html>\
  Temporary line segments that appear<br>\
  during various operations are<br>\
  converted to crease lines or auxiliary<br>\
  lines.
antiAliasToggleAction=<html>\
  Anti-alias processing of crease<br>\
  pattern
As100Action=<html>\
  In addition, 100 other folded shapes are<br>\
  calculated and each is saved to image<br>\
  files.
backColorAction=<html>\
  Change back side color of folded<br>\
  shape
goToFoldedFigureAction=<html>\
  Display the calculated shape in spe:<br>\
  order number.
colOrangeAction=<html>\
  Make the color of the auxiliary line<br>\
  which does not interfere with crease<br>\
  lines orange.
colYellowAction=<html>\
  Make the color of the auxiliary line<br>\
  which does not interfere with crease<br>\
  yellow lines.
Button_suitei_04=<html>\
  Calculate folded shape.
foldedFigureFlipAction=<html>\
  Flip over
scaleAction=<html>\
  Scale folded figure to the relative CP size
duplicateFoldedModelAction=<html>\
  Duplicate folded figure
anotherSolutionAction=<html>\
  Search another calculate shape.
colBlackAction=<html>\
  Define crease line type.<br>\
  Black line means edge line.
colBlueAction=<html>\
  Define crease line type.<br>\
  Blue line means Valley fold.
colCyanAction=<html>\
  Draw auxiliary line that interferes<br>\
  with a crease line
colRedAction=<html>\
  Define crease line type.<br>\
  Red line means Mountain fold.
check=<html>\
  isp
ckOAction=<html>\
  Check problems in crease pattern<br>\
  (when some crease lines overlap)<br>\
  <br>\
  To fix the problem automatically,<br>\
  press “fix” on the right.
ckTAction=<html>\
  Check problems in crease pattern (when two<br>\
  crease lines are T-shaped)<br>\
  <br>\To fix the problem automatically, press “fix!”<br>\
  on the right.
check3=<html>\
  Check problems in crease pattern (abnormal<br>\
  vertex)
cAMVAction=<html>\
  Check problems in crease pattern (abnormal<br>\
  vertex) <br>\
  Types of errors: <br><br>\
  <b>Triangles</b>: incorrect (odd) number of folds: <br>\
  <img src="help-img/triangle-red.png" height="10">&nbsp; Not enough mountain folds<br>\
  <img src="help-img/triangle-blue.png" height="10">&nbsp; Not enough valley folds<br>\
  <img src="help-img/triangle-purple.png" height="10">&nbsp; Too many or not enough edge lines<br><br>\
  <b>Squares</b>: incorrect fold types<br>\
  <img src="help-img/square-red.png" height="10">&nbsp; Not enough mountain folds<br>\
  <img src="help-img/square-blue.png" height="10">&nbsp; Not enough valley folds<br>\
  <img src="help-img/square-gray.png" height="10">&nbsp; Equal amount of mountain and valley folds<br>\
  <img src="help-img/square-purple.png" height="10">&nbsp; Invalid configuration of edge lines<br><br>\
  <b>Circles</b>: incorrect angles (Kawasaki's theorem)<br>\
  <b>Solid</b>: like squares, but with incorrect angles <br>\
  <img src="help-img/circle-red.png" height="10">&nbsp; Not enough mountain folds<br>\
  <img src="help-img/circle-blue.png" height="10">&nbsp; Not enough valley folds<br>\
  <img src="help-img/circle-gray.png" height="10">&nbsp; Equal amount of mountain and valley folds<br>\
  <b>Empty</b>: <br>\
  <img src="help-img/ring-gray.png" height="10">&nbsp; only incorrect angles, everything else is correct <br><br>\
  <b>Half-filled polygons</b>:<br>\
  <img src="help-img/polygon.png" height="10">&nbsp; Fold number, angle and types are correct but order is incorrect\
  (big-little-big lemma). The filled sectors show the little angles causing the problem
ck4_colorIncreaseAction=<html>\
  Darken the color of the warning mark of<br>\
  the vertex foldability check.
ck4_colorDecreaseAction=<html>\
  Reduce the warning mark color of<br>\
  vertex foldability check.
displayAuxLinesAction=<html>\
  Decide whether to display the auxiliary<br>\
  line (cyan) or not.
displayLiveAuxLinesAction=<html>\
  Decide whether to display the auxiliary<br>\
  line (orange, yellow) or not.
selectAnd3ClickAction=<html>\
  If this check box is selected,in<br>\
  the crease line selection mode,<br>\
  triple-clicking the left mouse<br>\
  button at an appropriate<br>\
  location, you can switch from the<br>\
  crease line selection mode to the<br>\
  operation mode. (Move, copy,<br>\
  etc.)
replace_lineAction=<html>\
  Replace a line type with a different type.
switchReplaceAction=<html>\
  Swap the line types to replace (Can't be applied when "Any" or "M & V" is selected).
ckbox_add_frame_to_front=<html>\
  Display progress of calculation for<br>\
  folding estimation.
del_l_typeAction=<html>\
  Delete lines base on their type
displayCommentsAction=<html>\
  Decide whether to display comments or<br>\
  not.
correctCpBeforeFoldingAction=<html>\
  Automatically correct the crease<br>\
  pattern before calculating the folded<br>\
  shape
cpOnTopAction=<html>\
  Crease pattern is drawn on the front of<br>\
  calculated shape.
displayCpLinesAction=<html>\
  Decide whether to display crease line or<br>\
  not.
gridInputAssistAction=<html>\
  Use input assist function for fine grid
displayStandardFaceMarksAction=<html>\
  Display a circle as mark of the standard<br>\
  face and display cross as movement<br>\
  center mark.
mouseSettingsAction=<html>\
  Decide whether to use mouse as wheel<br>\
  mouse.<br>\
  <br>\
  When this is ON, the following functions<br>\
  are added.<br>\
  <br>\
  (1) Disables mouse scroll zoom.
ckbox_oritatami_keika=<html>\
  Display progress of calculation for<br>\
  folding estimation.
selectPersistentAction=<html>\
  The select state of crease lines do not<br>\
  disappear even after the folded shape<br>\
  calculation.
pointOffsetAction=<html>\
  The point specified by the mouse is<br>\
  shifted from the position of the mouse<br>\
  pointer.
showPointRangeAction=<html>\
  Show the search range for points and<br>\
  lines around the mouse with yellow.<br>\
  <br>\
  The radius of this range is a quarter<br>\
  of the width of lattice<br>\
  <br>\
  If lattice width is changed, this range<br>\
  also changes.
coloredXRayAction=<html>\
  Draw colored X-ray graph.
copy2p2pAction=<html>\
  Copy so that two copy source point matches<br>\
  two copy destination point.<br>\
  <br>\
  (0) Select Crease lines in advance using<br>\
  select button<br>\
  <br>\
  (1) Select copy source point A<br>\
  <br>\
  (2) Select copy source point B<br>\
  <br>\
  (3) Select copy destination point C<br>\
  <br>\
  (4) Select copy destination point D<br>\
  <br>\
  (5) Copy is made so that point A matches<br>\
  point C and point B matches point D.
copyAction=<html>\
  Copy and Paste selected crease lines.<br>\
  <br>\
  (1) Select crease lines in advance using select<br>\
  button.<br>\
  <br>\
  (2) Push mouse button anywhere you like.<br>\
  <br>\
  (3)Move mouse.<br>\
  <br>\
  (4) Release mouse button anywhere you like<br>\
  <br>\
  Then, selected lines are pasted at the place<br>\
  that corresponds to mouse move.
deg1Action=<html>\
  (1) Select either:<br>\
  - a line<br>\
  - 2 points making up a line<br>\
  <p>(2) Extension lines appear. Select an intersection between two of them</p>
deg2Action=<html>\
  Draw a angularly restricted crease line.
deg3Action=<html>\
  Angle restricted line draw<br>\
  <br>\
  (1) Select a point.<br>\
  <br>\
  (2) Select another point<br>\
  <br>\
  (3) Then appear extension lines.<br>\
  Select a extension line and the line<br>\
  changes to blue<br>\
  <br>\
  (4) Select a crease line.<br>\
  <br>\
  (5) New crease line is drawn to<br>\
  intersection of (3) and (4).
deg4Action=<html>\
  Angle restricted line draw<br>\
  <br>\
  (1) Select a point.<br>\
  <br>\
  (2) Select another point<br>\
  (3) Then appear extension lines. Click<br>\
  somewhere on a extension
del_l_XAction=<html>\
  Draw a straight line and delete<br>\
  crease lines.<br>\
  <br>\
  (1) Draw a straight line.<br>\
  <br>\
  (2) Crease lines completely<br>\
  included in the straight line are<br>\
  deleted.<br>\
  <br>\
  And Crease lines that intersect<br>\
  the straight line are deleted<br>\
  too.
del_lAction=<html>\
  Draw a straight line and delete<br>\
  crease lines.<br>\
  (1) Draw a straight line.<br>\
  <br>\
  (2) Crease lines completely<br>\
  included in the straight line<br>\
  are deleted.
deleteSelectedLineSegmentAction=<html>\
  Delete selected lines.
circleDrawConcentricSelectAction=<html>\
  Select a circle and draw the concentric<br>\
  circle (the width is determined by another<br>\
  two circles)<br>\
  <br>\
  (1) Select circle A.<br>\
  <br>\
  (2) Select circle B.<br>\
  <br>\
  (3) Select circle C<br>\
  <br>\
  (4) Circle D is drawn as a concentric<br>\
  circle of circle A. The difference<br>\
  between the radii of circle D and circle A.<br>\
  is equal to the difference between the<br>\
  radii of circle C and circle B
circleDrawConcentricAction=<html>\
  Select circle and draw concentric circle<br>\
  (width is decided by drawing line)<br>\
  <br>\
  (1) Select a circle.<br>\
  <br>\
  (2) Press the mouse button near a grid<br>\
  point or end point of any line.<br>\
  <br>\
  (3) While holding down, move the mouse<br>\
  appropriately and a line is drawn<br>\
  <br>\
  (4) Release the mouse button near<br>\
  another grid point or end of line
toEdgeAction=<html>\
  Select the polygonal line with mouse,<br>\
  and set it as edge line or MV-undefined<br>\
  line (black line).
trimBranchesAction=<html>\
  Trim branch type crease lines.
circleDrawThreePointAction=<html>\
  Select 3 points and draw a circle<br>\
  passing through these 3 points.
circleDrawSeparateAction=<html>\
  Draw a circle and use it as an auxiliary<br>\
  line (define center and radius of circle<br>\
  separately).<br>\
  <br>\
  (1) Push mouse button near any lattice<br>\
  point or end point of another crease line<br>\
  (the center is determined).<br>\
  <br>\
  (2) Press another point different<br>\
  from (1).<br>\
  <br>\
  (3) Move mouse.<br>\
  <br>\
  (4) Release mouse button near any<br>\
  lattice point or end point of another<br>\
  crease line (the circumference is<br>\
  determined).
circleDrawTwoConcentricAction=<html>\
  Select two circles then draw each<br>\
  concentric circle (concentric circles<br>\
  contact each other, the width between<br>\
  each concentric circle and the original<br>\
  circle is equal)<br>\
  <br>\
  (1) Select circle A.<br>\
  <br>\
  (2) Select circle B.<br>\
  <br>\
  (3) Each concentric circle is drawn.
circleDrawTangentLineAction=<html>\
  Select two circles and draw a common<br>\
  tangent line.<br>\
  <br>\
  (1) Select a circle.<br>\
  <br>\
  (2) Select another circle.<br>\
  <br>\
  (3) If there is only one common tangent<br>\
  line, a common tangent line of (1) and<br>\
  (2) is drawn.<br>\
  <br>\
  If there are several common tangent<br>\
  lines. They are indicated by purple lines.<br>\
  Choose a favorite line from those purple<br>\
  lines.
circleDrawFreeAction=<html>\
  Draw a circle and use it as an auxiliary<br>\
  line (free drawing).<br>\
  <br>\
  (1) Press mouse button at the place<br>\
  you want (the center is determined).<br>\
  <br>\
  (2) Move the mouse appropriately while<br>\
  pressing it.<br>\
  <br>\
  (3) Release the mouse button<br>\
  anywhere you like (the circumference<br>\
  is determined).
circleDrawAction=<html>\
  Draw a circle and use it as an auxiliary<br>\
  line.<br>\
  <br>\
  (1) Push mouse button near any lattice<br>\
  point or end point of another crease<br>\
  line (the center is determined)<br>\
  <br>\
  (2) Move mouse.<br>\
  <br>\
  (3) Release mouse button near any<br>\
  lattice point or end point of another<br>\
  crease line<br>\
  (the circumference is determined).
frontColorAction=<html>\
  Change front side color of folded<br>\
  shape
fxOAction=<html>\
  To fix the problem (Check0)<br>\
  automatically.
fxTAction=<html>\
  To fix the problem (Check1) automatically.
doubleSymmetricDrawAction=<html>\
  Draw symmetrical crease lines to<br>\
  the crease lines that contact the input<br>\
  line.
h_redoAction=<html>\
  redo (auxiliary line (orange, yellow))
h_senbun_nyuryokuAction=<html>\
  Draw auxiliary line that does not<br>\
  interfere with a crease line.
h_senbun_sakujyoAction=<html>\
  Delete auxiliary line that does not<br>\
  interfere with a crease line.
h_senhaba_ageAction=<html>\
  Increase width of the auxiliary line that<br>\
  does not interfere with crease lines.
h_senhaba_sageAction=<html>\
  Decrease width of the auxiliary line<br>\
  that does not interfere with crease<br>\
  lines.
h_undoTotalSetAction=<html>\
  Decide how many undo’s can be done.<br>\
  <br>\
  with crease lines)
h_undo=<html>\
  undo (auxiliary line (orange, yellow))
backgroundToggleAction=<html>\
  Turn off or turn on background image.
backgroundLockAction=<html>\
  Lock on so that the background moves<br>\
  according to crease pattern.<br>\
  Press it again to lock off.
backgroundTrimAction=<html>\
  Before using this button, draw a<br>\
  “green operation frame” in advance.<br>\
  Then, press this button to trim the<br>\
  background image.
readBackgroundAction=<html>\
  Read background image file (jpg)
circleDrawInvertedAction=<html>\
  Draw an image by inversion of a circle or<br>\
  a line<br>\
  <br>\
  (1) Select circle or line.<br>\
  <br>\
  (2) Select another circle as reference<br>\
  circle.<br>\
  <br>\
  (3) Draw an image of (1) which is<br>\
  inverted by the inversion (reference<br>\
  circle is 2).
setParallelDrawWidthAction=<html>\
  Select crease line and draw a parallel<br>\
  line.<br>\
  <br>\
  (1) Select crease line<br>\
  <br>\
  (2) Select point by pressing mouse<br>\
  button at an appropriate place on crease<br>\
  pattern<br>\
  <br>\
  (3) While holding down the mouse<br>\
  button, move to another point.<br>\
  <br>\
  (4) Release the mouse button.<br>\
  <br>\
  (5) Two candidates of parallel lines are<br>\
  drawn with purple lines, so choose the<br>\
  one you like
parallelDrawAction=<html>\
  A crease line c parallel to line b is drawn<br>\
  from point a<br>\
  <br>\
  (1) Select vertex or lattice point (point<br>\
  A)<br>\
  <br>\
  (2) Choose a crease line (line B)<br>\
  <br>\
  (3) Pick another crease lines (line C)<br>\
  <br>\
  (4) A crease line parallel to (2) is drawn<br>\
  from point A to the point of<br>\
  intersection with (3).
toAuxAction=<html>\
  Select the polygonal line with mouse,<br>\
  and set it an auxiliary line that interferes<br>\
  with a crease line
changeGridStateAction=<html>\
  Define lattice status.
in_L_col_changeAction=<html>\
  Change the color of crease lines<br>\
  included in the input line
restrictedAngleABCSetAction=<html>\
  Define arbitrary angles in left three<br>\
  boxes, then corresponding lines can be<br>\
  drawn with angle system input function.
restrictedAngleSetDEFAction=<html>\
  Define arbitrary angles in left three<br>\
  boxes, then corresponding lines can be<br>\
  drawn with angle system input function.
foldedFigureToggleShadowAction=<html>\
  Shadow the calculated shape.
rotationSetAction=<html>\
  Fine adjustment of inclination angle<br>\
  of crease pattern.
saveAction=<html>\
  Output data file<br>\
  <br>\
  Oriedita can output two type data file<br>\
  (1) .ori :Oriedita original file type<br>\
  (2) .cp  :cp file type. (ORIPA can read<br>\
  cp file.)
saveAsAction=<html>\
  Output data file<br>\
  <br>\
  Oriedita can output two type data file<br>\
  <br>\
  (1) .ori :Oriedita original file type<br>\
  <br>\
  (2) .cp  :cp file type. (ORIPA can read<br>\
  cp file.)
angleBisectorAction=<html>\
  <p>Draw angle bisector line</p>\
  <p><b>3-point method:</b><br>\
  (1) Select point A.<br>\
  (2) Select point B.<br>\
  (3) Select point C.<br>\
  (4) Select a destination line to draw bisector to.</p>\
  <p><b>2-line method:</b><br>\
  (1) Select line A.<br>\
  (2) Select line B.<br>\
  (3) If A & B aren't parallel:<br>\
  - Select a destination line to draw bisector to<br>\
  Otherwise, either:<br>\
  - Select 2 lines defining bisector's start & end<br>\
  - Click on the purple indicator to auto-expand<br>\
  </p>
angleSystemAIncreaseAction=<html>\
  Angle restricted line draw.<br>\
  Increase angle.
angleSystemADecreaseAction=<html>\
  Angle restricted line draw.<br>\
  Reduce angle.
angleSystemAAction=<html>\
  Angle restricted line draw.<br>\
  Define angle
angleSystemBIncreaseAction=<html>\
  Angle restricted line draw.<br>\
  Increase angle.
angleSystemBDecreaseAction=<html>\
  Angle restricted line draw.<br>\
  Reduce angle.
angleSystemBAction=<html>\
  Angle restricted line draw.<br>\
  Define angle
a1Action=<html>\
  Display the angle formed by three<br>\
  points.
a2Action=<html>\
  Display the angle formed by three<br>\
  points.
a3Action=<html>\
  Display the angle formed by three<br>\
  points.
polygonSizeSetAction=<html>\
  Set the number of corners of a regular<br>\
  polygon.
haltAction=<html>\
  Cancel calculation of folded shape estimation<br>\
  <br>\
  If you press this button during calculation,<br>\
  a dialog opens and asking if you want to<br>\
  save crease pattern. &lt;left button><br>\
  after saving cp, calculation is stopped<br>\
  &lt;center button><br>\
  calculation is stopped without saving cp.<br>\
  &lt;right button><br>\
  continue calculation of folded shape<br>\
  estimation.
gridSizeIncreaseAction=<html>\
  Fine lattice
gridSizeDecreaseAction=<html>\
  Rough lattice
koteimen_siteiAction=<html>\
  Change standard face<br>\
  <br>\
  The standard face is fixed when<br>\
  Oriedita calculate folded shape and<br>\
  the position of another face is<br>\
  determined based on the position of<br>\
  standard face. If you want to change<br>\
  standard face, click S_face button and<br>\
  click another face of the CP.
gridColorAction=<html>\
  Change line color of lattice
intervalGridColorAction=<html>\
  Change scale line color of lattice
gridLineWidthIncreaseAction=<html>\
  Increase width of lattice line.
gridLineWidthDecreaseAction=<html>\
  Decrease width of lattice line
setGridParametersAction=<html>\
  Set parameters for lattice<br>\
  (2 rows above, vertical magnification,<br>\
  1 row above, horizontal magnification,<br>\
  this row is grid angle)<br>\
  <br>\
  If vertical or horizontal magnification<br>\
  isn't 1.0 or angle isn't 90 degrees then<br>\
  grid is drawn.
setGridAngleAction=<html>\
  Set grid angle.
setGridXAction=<html>\
  Set horizontal stretch for grid<br>\
  in the form A + B &radic;C
setGridYAction=<html>\
  Set vertical stretch for grid<br>\
  in the form A + B &radic;C
edgeLineSegmentDeleteAction=<html>\
  Delete Black line
reflectAction=<html>\
  Draw line symmetric crease lines<br>\
  <br>\
  (0) Select Crease lines in advance<br>\
  using select button.<br>\
  <br>\
  (1) Select point A and point B<br>\
  <br>\
  (2) Then symmetric crease line is<br>\
  drawn
lineColorAction=<html>\
  Change line color of folded shape.
toMountainAction=<html>\
  Select crease line with mouse and set<br>\
  it as mountain fold line (red line).
setIntervalGridSizeAction=<html>\
  When changing the color of grid<br>\
  regular intervals, determine the interval
moveIntervalGridVerticalAction=<html>\
  When changing the color of grid lines at<br>\
  fixed intervals, move the position of the<br>\
  different color lines.
moveIntervalGridHorizontalAction=<html>\
  When changing the color of grid lines at<br>\
  fixed intervals, move the position of the<br>\
  different color lines.
move2p2pAction=<html>\
  Move so that the two points of selected<br>\
  lines matches two destination points.<br>\
  <br>\
  (1) Select the point A of selected lines<br>\
  <br>\
  <br>\
  (2) Select the point B of selected lines<br>\
  <br>\
  (3) Select the destination point C<br>\
  <br>\
  (4) Select the destination point D<br>\
  <br>\
  (5) Selected lines are moved so that point A<br>\
  matches point C and point B matches point<br>\
  D.
moveAction=<html>\
  Move selected crease lines.<br>\
  (0) Select crease lines in advance using select<br>\
  button.<br>\
  <br>\
  (1) Push mouse button anywhere you like.<br>\
  <br>\
  (2) Move mouse.<br>\
  <br>\
  (3)Release mouse button anywhere you like<br>\
  <br>\
  Then, selected lines move as much as mouse.
l1Action=<html>\
  Display the length between two points.
l2Action=<html>\
  Display the length between two points.
rabbitEarAction=<html>\
  Draw lines toward inner center.<br>\
  <br>\
  (1)Select point A.<br>\
  <br>\
  (2)Select point B.<br>\
  <br>\
  (3)Select point C.<br>\
  <br>\
  (4)Three lines toward inner center<br>\
  are drawn.
o_F_checkAction=<html>\
  Select the folding line of the outer peripheral part<br>\
  and judge whether the outer peripheral part can be<br>\
  folded.<br>\
  <br>\
  (1) Draw a polygon consisting of yellow lines<br>\
  representing the outer circumference.<br>\
  <br>\
  If you left-click and drag the mouse, you can draw a<br>\
  yellow line segment -Draw several line segments<br>\
  repeatedly to draw a closed polygon.<br>\
  <br>\
  3Do not place the vertices of the yellow polygon on<br>\
  the crease line.<br>\
  <br>\
  The sides of the yellow polygon should not pass<br>\
  through the vertices of the crease line-<br>\
  <br>\
  (2) When a closed polygon is drawn, the judgaent is<br>\
  automatically performed.<br>\
  <br>\
  If the outer circuaference is foldable, the yellow<br>\
  line turns light blue-If the outer circumference is<br>\
  unfoldable, the yellow line will be magenta.
on_L_col_changeAction=<html>\
  Change the color of crease lines that<br>\
  intersect the input line.
foldedFigureMoveAction=<html>\
  Move calculated shape.
foldedFigureSizeIncreaseAction=<html>\
  Zoom in calculated shape.
foldedFigureRotateClockwiseAction=<html>\
  Rotate (clockwise) calculated shape.
foldedFigureRotateAntiClockwiseAction=<html>\
  Rotate (counterclockwise) calculated<br>\
  shape
oriagari_sousa_2Action=<html>\
  Modify calculated shape.
oriagari_sousaAction=<html>\
  Modify calculated shape.
foldedFigureSizeDecreaseAction=<html>\
  Zoom out calculated shape.
foldedFigureRotateSetAction=<html>\
  Fine adjustment of the inclination<br>\
  angle of folded shape.
foldedFigureSizeSetAction=<html>\
  Fine adjustment of the scale of<br>\
  folded shape.
symmetricDrawAction=<html>\
  Draw line symmetric crease line.<br>\
  <br>\
  (1)Select point A.<br>\
  <br>\
  (2)Select point B.<br>\
  <br>\
  (3)Select point C.<br>\
  <br>\
  (4)Then line symmetric crease line of<br>\
  BA is drawn (axis of symmetry is BC).
lineStyleChangeAction=<html>\
  Change the style of crease<br>\
  line.
foldableLineDrawAction=<html>\
  Draw a crease line<br>\
  You can draw a crease line by left-clicking<br>\
  the mouse at any point.<br>\
  <br>\
  If you left-click a vertex with odd-numbered<br>\
  crease lines, the candidate crease<br>\
  lines to make the vertex foldable are<br>\
  displayed as purple lines.<br>\
  <br>\
  If you want to make the vertices foldable,<br>\
  <br>\
  (1) Select one of the purple lines by left-clicking it<br>\
  <br>\
  (2) Select an existing fold line by left-clicking it<br>\
  <br>\
  (3) The selected purple line candidate is extended<br>\
  to the already existing crease line and added<br>\
  as a fold line.
foldableLinePlusGridInputAction=<html>\
  Enter a crease line of the grid point<br>\
  system or a crease line enabling the<br>\
  vertex to collapse.<br>\
  <br>\
  (1) Select vertex or lattice point.<br>\
  <br>\
  (2) Select a vertex or lattice point<br>\
  different from (1). If purple lines are<br>\
  indicated, you can also select purple line<br>\
  <br>\(3) Select a crease line from the existing<br>\
  crease lines.<br>\
  <br>\
  (4) A crease line is drawn from the<br>\
  vertex(1) to the intersection of (2) and<br>\
  (3).
makeFlatFoldableAction=<html>\
  If selected vertex has odd number of<br>\
  crease lines, one fold line is added to<br>\
  make the vertex angularly foldable<br>\
  (distinction between mountains and<br>\
  valleys is ignored)<br>\
  <br>\
  (1) Select vertex.<br>\
  <br>\
  (2) Candidate crease lines are shown<br>\
  by purple lines. If there are multiple<br>\
  purple lines, select one.<br>\
  <br>\
  (3) Select a crease line from the<br>\
  existing crease lines.<br>\
  <br>\
  (4) A crease line is drawn from<br>\
  vertex (1) to the intersection of (2) and<br>\
  (3).
redoAction=<html>\
  Redo
foldedFigureRedoAction=<html>\
  Redo
foldedFigureUndoAction=<html>\
  Undo
continuousSymmetricDrawAction=<html>\
  Draw symmetric crease line<br>\
  <br>\
  (1)Select point A.<br>\
  <br>\
  (2)Select point B.<br>\
  <br>\
  (3)Then symmetric crease line to<br>\
  AB is drawn<br>\
  <br>\
  (4) As long as the conditions are met, the<br>\
  above operation is automatically repeated.
fishBoneDrawAction=<html>\
  Draw repeating crease lines with the<br>\
  interval of the grid width in the<br>\
  direction orthogonal to the input line.<br>\
  However, crease line is not drawn from<br>\
  the end points of already existing<br>\
  polygonal lines.
regularPolygonAction=<html>\
  Draw a regular polygon<br>\
  <br>\
  (1) Select point A.<br>\
  <br>\
  (2) Select point B.<br>\
  <br>\
  (3) A regular polygon is drawn clockwise.
selectAllAction=<html>\
  Select all crease lines.
select_lXAction=<html>\
  Draw a straight line and select<br>\
  crease lines.<br>\
  <br>\
  (1) Draw a straight line.<br>\
  <br>\
  (2) Crease lines completely<br>\
  included in the straight line are<br>\
  selected.<br>\
  <br>\
  And crease lines that intersects<br>\
  the straight line are selected<br>\
  too.
select_polygonAction=<html>\
  Draw a polygon and select crease<br>\
  lines.<br>\
  <br>\
  (1) Draw a polygon of selection<br>\
  area (purple lines)-<br>\
  <br>\
  (2) Then a closed polygon is<br>\
  drawn, crease lines completely<br>\
  contained inside or boundary<br>\
  line of the polygon are<br>\
  selected.
select_suitei=<html>\
  Calculate the folded shape with only<br>\
  <br>\
  the selected fold line (Select Crease<br>\
  lines in advance using select button).
selectAction=<html>\
  Select crease lines.
sen_tokutyuu_color_henkouAction=<html>\
  Change the color of the circle selected<br>\
  with the mouse.
c_colAction=<html>\
  Color designation to change the color<br>\
  of the circle.
senbun_b_nyuryokuAction=<html>\
  Draw lines equally divided by the number<br>\
  at the left side
lineSegmentDivisionSetAction=<html>\
  Set the dividing number (left side) to<br>\
  crease line (right side)
lengthenCrease2Action=<html>\
  Lengthen crease line (same color)<br>\
  <br>\
  (1) Left-click the mouse to select one<br>\
  crease line (you can also select multiple<br>\
  crease lines by left-clicking and dragging)<br>\
  The selected crease line (s) turns green.<br>\
  <br>\
  (2-1) If you left-click an unselected crease<br>\
  line, the selected crease line will be<br>\
  extended to that line.<br>\
  <br>\
  (2-2) If you left-click the selected crease<br>\
  line, the selected crease line will be<br>\
  extended until it hits another crease line.
lengthenCreaseAction=<html>\
  Lengthen crease line (Specified color)<br>\
  <br>\
  (1) Left-click the mouse to select one<br>\
  crease line (you can also select multiple<br>\
  crease lines by left-clicking and dragging)<br>\
  The selected crease line (s) turns green.<br>\
  <br>\
  (2-1) If you left-click an unselected crease<br>\
  line, the selected crease line will be<br>\
  extended to that line.<br>\
  <br>\
  (2-2) If you left-click the selected crease<br>\
  line, the selected crease line will be<br>\
  extended until it hits<br>\
  another crease line.
senbun_henkanAction=<html>\
  Change Crease line type.<br>\
  <br>\
  Red (mountain) to blue (valley).<br>\
  Blue (valley) to black (edge).<br>\
  Black (edge) to red (mountain).
senbun_henkan2Action=<html>\
  Change Crease line type.<br>\
  <br>\
  Red (mountain) to blue (valley).<br>\
  Blue (valley) to red (mountain).
drawLineSegmentInternalDivisionRatioAction=<html>\
  Draw line divided by the interior division<br>\
  ratio.
lineSegmentInternalDivisionRatioSetAction=<html>\
  Set the internal division ratio of the<br>\
  crease line
drawCreaseFreeAction=<html>\
  Draw crease line (free)<br>\
  <br>\
  (1) Push mouse button anywhere you like<br>\
  <br>\
  (2) Move mouse.<br>\
  <br>\
  (3) Release mosue button anywhere you like.
drawCreaseRestrictedAction=<html>\
  Draw crease line (restricted)<br>\
  <br>\
  (1) Push mouse button near any lattice<br>\
  point or end point of another crease<br>\
  line.<br>\
  <br>\
  (2) Move mouse<br>\
  <br>\
  (3) Release mouse button near any<br>\
  lattice point or end point of another<br>\
  crease line
lineSegmentDeleteAction=<html>\
  Select crease line with mouse and<br>\
  delete it.
senbun_yoke_henkanAction=<html>\
  Change line type (color) of crease line<br>\
  (used when there is background crease<br>\
  pattern. When mouse is pressed, the back of<br>\
  crease line can be seen.)<br>\
  <br>\
  - From Black to black (select state,<br>\
  overwritten with green).<br>\
  <br>\
  - From Black (select state) to red.<br>\
  <br>\
  - From red to blue.<br>\
  <br>\
  - From blue to red.<br>\
  <br>\
  If you press “del_sel_al” later, then selected<br>\
  black lines are deleted at once.
auxLiveLineSegmentDeleteAction=<html>\
  Select only auxiliary line (cyan) with<br>\
  mouse and delete it
lineWidthIncreaseAction=<html>\
  Increase width of crease lines.
lineWidthDecreaseAction=<html>\
  Decrease width of crease lines.
backgroundSetPositionAction=<html>\
  Adjust the position of the background<br>\
  (1) Select point A on background<br>\
  <br>\
  (2) Select point B on background<br>\
  <br>\
  <br>\
  (3) Select point C on crease pattern<br>\
  <br>\
  (4) Select point D on crease pattern<br>\
  <br>\
  (5) The background moves so that point<br>\
  <br>\
  A matches point C and point B matches<br>\
  point D
foldedFigureTrashAction=<html>\
  Throw away calculated shape.
perpendicularDrawAction=<html>\
  Draw perpendicular line<br>\
  <br>\
  (1)Select point A<br>\
  <br>\
  (2)Select crease line B.<br>\
  <br>\
  (3)New crease line is drawn from A to<br>\
  B.
suitei_01Action=<html>\
  Recognize Crease pattern.
suitei_02Action=<html>\
  Draw wire graph
suitei_03Action=<html>\
  Draw X-ray graph.
foldAction=<html>\
  Calculate folded shape
scaleFactorSetAction=<html>\
  Fine adjustment of the scale of<br>\
  crease pattern.
gridSizeSetAction=<html>\
  Draw grid equally divided by the number<br>\
  at the left side
pointSizeIncreaseAction=<html>\
  Increase width of vertex.
pointSizeDecreaseAction=<html>\
  Decrease width of vertex.
moveCreasePatternAction=<html>\
  Move crease pattern.
creasePatternZoomInAction=<html>\
  Zoom in crease pattern.
rotateClockwiseAction=<html>\
  Rotate (clockwise) crease pattern.
rotateAnticlockwiseAction=<html>\
  Rotate (counterclockwise) crease<br>\
  pattern,
creasePatternZoomOutAction=<html>\
  Zoom out crease pattern.
tou_kyori_senbun=<html>\
  isp
coloredXRayIncreaseAction=<html>\
  Darken color.
coloredXRayDecreaseAction=<html>\
  Reduce color.
transparentAction=<html>\
  Display the PC screen hidden behind<br>\
  Oriedita as background of Oriedita<br>\
  window.
ad_fncAction=<html>\
  Display additional functions
operationFrameSelectAction=<html>\
  Create operation frame.<br>\
  <br>\
  If you press this button and<br>\
  create an operation frame,<br>\
  then output the image with<br>\
  ipg or png, only the inside<br>\
  of the frame will be output.
foldedFigureUndoCountAction=<html>\
  Decide how many undo’s can be<br>\
  done (crease line input)
setUndoCountAction=<html>\
  Decide how many undo’s can be<br>\
  done (crease line input)
undoAction=<html>\
  Undo
h_undoAction=<html>\
  Undo
unselectAllAction=<html>\
  Unselect all selected lines.
unselect_lXAction=<html>\
  Draw a straight line and deselect<br>\
  the crease line.<br>\
  <br>\
  (1) Draw a straight line.<br>\
  <br>\
  (2) Crease lines completely<br>\
  included in the straight line are<br>\
  deselected.<br>\
  <br>\
  And crease lines that intersect<br>\
  the straight line are deselected<br>\
  too.
unselect_polygonAction=<html>\
  Draw a polygon and deselect<br>\
  crease lines-<br>\
  <br>\
  (1) Draw a polygon of selection<br>\
  area (purple lines)-<br>\
  <br>\
  (2) Then a closed polygon is<br>\
  draen, crease lines completely<br>\
  contained inside or boundary line<br>\
  of the polygon are deselected.
unselectAction=<html>\
  Unselect crease lines.
vertexAddAction=<html>\
  Add vertex
v_del_all_ccAction=<html>\
  Delete vertices from two linearly<br>\
  connected crease lines to make one<br>\
  crease line (even if the two crease<br>\
  lines are different colors), at once
v_del_allAction=<html>\
  Delete vertices from two linearly<br>\
  connected crease lines to make one<br>\
  crease line (executed when the two<br>\
  crease lines are the same color), at<br>\
  once
v_del_ccAction=<html>\
  Delete vertices from two linearly<br>\
  connected crease lines to make one<br>\
  crease line (even if the two crease<br>\
  lines are different colors).
vertexDeleteAction=<html>\
  Delete vertices from two linearly<br>\
  connected crease lines to make one<br>\
  crease line (executed when the two<br>\
  crease lines are the same color).
toValleyAction=<html>\
  Select crease line with mouse and set it<br>\
  as valley fold line (blue line).
voronoiAction=<html>\
  Voronoi diagrams can be created by<br>\
  selecting points.<br>\
  <br>\
  Clicking the selected point again will<br>\
  cancel the selection.<br>\
  <br>\
  To convert a Voronoi diagram to a<br>\
  crease line, press the button with the<br>\
  purple square drawn.
exportAction=<html>\
  Save Image file.<br>\
  (png or jpg)
openExportDialogAction=<html>\
  Save Image file.<br>\
  (png or jpg)
prefAction=<html>\
  Preference window to access<br>\
  different settings
inputDataAction=<html>\
  Input data file. (add)<br>\
  <br>\
  <br>\
  <br>\
  Oriedita can read three types of data file<br>\
  format,<br>\
  <br>\
  (1) orh: ORIHIME original file type<br>\
  <br>\
  (2) cp: cp type.<br>\
  <br>\
  <br>\
  <br>\
  (3) obj: obj file type (ORIPA can<br>\
  output obj file.)
openAction=<html>\
  Open .ori file.
importAction=<html>\
  <h1>Import data file.</h1>\
  <p>Oriedita can read four types of data file format</p>\
  <ol>\
  <li>.ori: Oriedita original file type</li>\
  <li>.cp: cp type.</li>\
  <li>.orh: Oriehime original file type</li>\
  <li>.fold: fold file</li>\
  </ol>
newAction=<html>\
  Start from scratch.
resetAction=<html>\
  Throw away all data<br>\
  Redo from the start.
zen_yama_tani_henkanAction=<html>\
  All crease lines change to another<br>\
  type (mountain fold changes to valley<br>\
  fold and valley fold changes to mountain<br>\
  fold)
preciseZoomAction=<html>\
  Enable smooth zooming. On non-supported hardware this option has no effect.
displaySelfIntersectionAction=<html>\
  <p>Display self intersection errors in the folded model.</p>\
  <p>When a self intersection error occurs while folding the associated area will be highlighted in red. Only the first self intersection error is reported.</p>
pasteOffsetClipboardAction=<html>\
  Paste crease pattern lines to the right side of the current crease pattern lines.
addColorConstraintAction=<html>\
  <p>Add constraints for the color of the folded model. Click anywhere on the folded model to set the color it should have in that location.</p>\
  <ul>\
  <li>White circle = the model should show the backside of the paper (white by default)</li>\
  <li>Black circle = the model should show the front side of the paper (yellow by default)</li>\
  </ul>\
  <p>Press Fold again after setting constraints to use them to find a solution</p>\
  <p>Right-click to remove constraints <br>click on constraints to change their color<br> ctrl+click to add constraints very close to existing ones</p>
textAction=<html>\
  <p>Add, remove or move Text</p>\
  <p>Click anywhere to add text, then click into the textbox that appears and start typing.</p>\
  <p>Click on existing text to edit it</p>\
  <p>Drag text around to move it (when editing, drag from slightly next to the textbox, not directly on it)</p>\
  <p>Right click on text to delete it</p>\
  <p>press ESC to finish editing a text</p>
axiom5Action=<html>\
  Axiom 5: Find lines that place point 1 to a line while passing through point 2<br>\
  <p>(1) Select point 1</p>\
  <p>(2) Select a line</p>\
  <p>(2) Select point 2</p>\
  <p>(4) Select either:<br>\
  - a destination line, staying close to one of the indicators to choose<br>\
  - one of the purple indicators to auto expand</p>\
  <p><b>Note:</b> <br>\
  - Distance between point 1 and point 2 must be equal or greater than projected distance between point 2 and the line</p>
axiom7Action=<html>\
  Axiom 7: Find a line that places a point to line 1 while perpendicular to line 2<br>\
  <p>(1) Select a point</p>\
  <p>(2) Select line 1</p>\
  <p>(2) Select line 2</p>\
  <p>(4) Select either:<br>\
  - a destination line<br>\
  - one of the purple indicators to auto expand</p>\
  <p><b>Note:</b> <br>\
  - the point can't be inside line 1's span<br>\
  - line 2 can't be parallel with line 1<br>\
  - Destination line can't be parallel with the purple indicators</p>
